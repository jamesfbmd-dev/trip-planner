@mixin button-base {
    display: inline-block;
    padding: 10px 20px;
    font-size: 14px;
    line-height: 1.5;
    text-align: center;

    @include respond-to('md') {
        padding: $btn-padding;
        font-size: $btn-font-size;
    }
    text-decoration: none;
    vertical-align: middle;
    cursor: pointer;
    user-select: none;
    background-color: transparent;
    border: 1px solid transparent;
    border-radius: $btn-border-radius;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;

    &:focus-visible {
        outline: none;
        box-shadow: $btn-focus-shadow;
    }

    &:disabled, &.disabled {
        pointer-events: none;
        background-color: $btn-disabled-bg;
        border-color: $btn-disabled-border;
        color: $btn-disabled-text;
        opacity: 0.65;
    }
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

@mixin button-variant($background, $color, $hover-background, $active-background, $font-weight: $btn-font-weight-secondary) {
    background-color: $background;
    color: $color;
    font-weight: $font-weight;

    &:hover {
        background-color: $hover-background;
    }

    &:active {
        background-color: $active-background;
        transform: translateY(1px);
    }
}

@mixin modal-base {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    justify-content: center;
    align-items: center;
    padding: 10px;

    .modal-content {
        background-color: $card-background;
        padding: 15px;
        border-radius: 8px;
        width: 100%;
        max-width: 500px;
        position: relative;
        max-height: 98vh;
        display: flex;
        flex-direction: column;

        @include respond-to('md') {
            padding: 30px;
            max-width: 800px;
        }

        h3 {
            font-weight: 300;
            font-size: 1.5em;
            margin-top: 0;
            > .date {
                font-weight: 800;
                color: $primary-color;
            }
        }
    }

    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
        padding: 10px;
        margin: 0 -10px;
    }

    .close-btn {
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 24px;
        font-weight: bold;
        cursor: pointer;
        color: $secondary-color-old;
    }

    .modal-input-group {
        margin-bottom: 15px;
        position: relative;

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid $border-color;
            border-radius: 5px;
        }
    }

    .autocomplete-list {
        list-style: none;
        padding: 0;
        margin: 0;
        border: 1px solid $border-color;
        border-top: none;
        background: $card-background;
        max-height: 200px;
        overflow-y: auto;
        position: absolute;
        width: 100%;
        z-index: 1001;
        box-sizing: border-box;

        &:empty {
            display: none;
        }

        li {
            padding: 10px;
            cursor: pointer;

            &:hover, &.active-item {
                background-color: $background-color;
            }
        }
    }

    .modal-footer {
        display: flex;
        flex-direction: column; // Stack buttons vertically on mobile
        align-items: stretch;
        gap: 10px;
        margin-top: 20px;
        padding-top: 20px;
        border-top: 1px solid $border-color;

        .footer-actions {
            display: flex;
            flex-direction: column; // Stack action buttons as well
            gap: 10px;
        }

        @include respond-to('sm') {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;

            .footer-actions {
                flex-direction: row; // Revert to horizontal for larger screens
                gap: 10px;
            }
        }
    }
}

@mixin button-outline-variant($color, $border-color, $hover-background, $active-background) {
    background-color: transparent;
    color: $color;
    border: 1px solid $border-color;

    &:hover {
        background-color: $hover-background;
    }

    &:active {
        background-color: $active-background;
        transform: translateY(1px);
    }
}